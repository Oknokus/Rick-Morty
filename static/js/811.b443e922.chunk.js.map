{"version":3,"file":"static/js/811.b443e922.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/modal/Modal.module.css?5a53","components/modal/Modal.jsx","webpack://my-app/./src/components/uiComponents/uiLink/UiLink.module.css?b8bb","components/uiComponents/uiLink/UiLink.jsx","webpack://my-app/./src/components/cardList/CardList.module.css?32aa","components/cardList/CardList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal_container\":\"Modal_modal_container__AB0uS\",\"modal_container__active\":\"Modal_modal_container__active__1w17W\",\"modal_container__closeImg\":\"Modal_modal_container__closeImg__pU+oe\",\"modal_container__content\":\"Modal_modal_container__content__z28pZ\",\"modal_container__activeOverFlow\":\"Modal_modal_container__activeOverFlow__q1fRz\",\"modal_container__personImg\":\"Modal_modal_container__personImg__oOVVD\",\"modal_container__components\":\"Modal_modal_container__components__MWGK9\",\"modal_container__span\":\"Modal_modal_container__span__3RmME\",\"modal_container__p\":\"Modal_modal_container__p__K6Xw5\"};","import PropTypes from 'prop-types';\r\nimport React, {useEffect, useState, Suspense} from 'react';\r\n\r\nimport closeImg from \"./img/closeImg.png\";\r\n\r\nimport UiLoading from '../uiComponents/uiLoading/UiLoading';\r\n\r\n\r\nimport styles from './Modal.module.css';\r\n\r\n\r\nconst LocationPage = React.lazy(()=> import(\"../locatonPage\"));\r\nconst EpisodesPage = React.lazy(()=> import(\"../episodesPage\"));\r\n\r\n\r\nconst Modal = ({objCardsList, isOpen, setIsOpen, personFavorites}) => { \r\n    const[listEpisodes, setListEpisodes] = useState([])\r\n    const[listLocation, setListLocation] = useState([])    \r\n\r\n    const handeleClickModalClose = (e) => {\r\n        setIsOpen(false);                  \r\n        };\r\n          \r\n        const {\r\n            name,\r\n            image, \r\n            id           \r\n        } =  objCardsList; \r\n\r\n        const {          \r\n            episode,\r\n            gender,\r\n            location,          \r\n            species,\r\n            status\r\n        } = personFavorites; \r\n        \r\n                \r\n       useEffect(() => {\r\n            if(isOpen) {               \r\n                setListEpisodes(episode);\r\n                setListLocation(\r\n                    [{name: location.name, url: location.url}]                 \r\n                );\r\n            }                \r\n        }, [personFavorites])                       \r\n       \r\n    return (        \r\n            <div className={isOpen ? styles.modal_container__active : styles.modal_container}>\r\n               <div>\r\n                    <img \r\n                        className={styles.modal_container__closeImg} \r\n                        src={closeImg}                        \r\n                        onClick={handeleClickModalClose }/>                       \r\n                </div> \r\n\r\n                <div className={styles.modal_container__content}>\r\n                \r\n                    <div key={personFavorites.id}>\r\n                         <img \r\n                            className={styles.modal_container__personImg}\r\n                            src={personFavorites.image}\r\n                            alt={personFavorites.name}/>                                     \r\n                    </div>\r\n\r\n                    <div>\r\n                        <p className={styles.modal_container__p}>\r\n                            <b>Name: </b>{personFavorites.name}<br/><b>Gender: </b>{gender}<br/><b>Species: </b>{species}<br/><b>Status: </b>{status}\r\n                        </p>\r\n\r\n                        <Suspense fallback={<UiLoading />}>\r\n                            {isOpen && <LocationPage listLocation={listLocation} />}                                \r\n                        </Suspense>\r\n                    </div> \r\n                        <div  className={listEpisodes.length > 20 ? styles.modal_container__components && styles.modal_container__activeOverFlow : styles.modal_container__components}>\r\n                            <Suspense fallback={<UiLoading />}>\r\n                                {isOpen && <EpisodesPage listEpisodes={listEpisodes} />}\r\n                            </Suspense>\r\n                        </div>\r\n                </div>\r\n            </div>               \r\n        );\r\n    };\r\n            \r\n\r\nModal.propTypes = {\r\n    objCardsList:PropTypes.object,\r\n    isOpen:PropTypes.bool,\r\n    setIsOpen:PropTypes.func,\r\n    personFavorites:PropTypes.object\r\n};\r\n\r\nexport default Modal;\r\n\r\n \r\n\r\n        ","// extracted by mini-css-extract-plugin\nexport default {\"link_container__img\":\"UiLink_link_container__img__jxaRD\"};","import linkImg from \"../uiLink/linkImg/linkImg.png\"\r\n\r\n\r\nimport styles from './UiLink.module.css';\r\n\r\n\r\nconst UiLink = () => {\r\n        let time = null;\r\n    function handleClickUp() {\r\n        if(window.pageYOffset !== 0) {\r\n            window.scrollBy(0,-100);\r\n            time = setTimeout(handleClickUp, 20);\r\n        } else clearTimeout(time);\r\n            return false;       \r\n        } \r\n\r\n    return (                      \r\n            <img \r\n                className={styles.link_container__img}\r\n                src={linkImg} \r\n                onClick={handleClickUp}\r\n                alt=\"linkImg\" />   \r\n            )\r\n}\r\n\r\nexport default UiLink;","// extracted by mini-css-extract-plugin\nexport default {\"cardList_container__div\":\"CardList_cardList_container__div__Bu2kH\",\"cardList_container__div_overFlow\":\"CardList_cardList_container__div_overFlow__G+WRS\",\"cardList_container\":\"CardList_cardList_container__g+w+R\",\"cardList_container__item\":\"CardList_cardList_container__item__cVkBE\",\"cardList_container__photo\":\"CardList_cardList_container__photo__hKig0\",\"cardList_container__name\":\"CardList_cardList_container__name__DhRPD\",\"cardList_container__modal\":\"CardList_cardList_container__modal__D6NEV\",\"modal_container__active\":\"CardList_modal_container__active__AiLnh\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nimport Modal from \"../modal\";\r\nimport UiLink from '../uiComponents/uiLink/UiLink';\r\n\r\n\r\nimport styles from './CardList.module.css';\r\n\r\n\r\nconst CardList = ({cards}) => {\r\n    const[isOpen, setIsOpen] = useState(false);   \r\n    const[personFavorites, setPersonfavorites] = useState({})    \r\n\r\n    const handeleClickModalOpen = (e) => {\r\n        setIsOpen(true);       \r\n        setPersonfavorites(cards[e.currentTarget.id-1])\r\n    };\r\n\r\n    return (\r\n        <div className={!isOpen ? styles.cardList_container__div : styles.cardList_container__div &&  styles.cardList_container__div_overFlow}>  \r\n            <ul className={styles.cardList_container}>\r\n                {cards.map((objCardsList) => \r\n                    <li  \r\n                        className={styles.cardList_container__item}\r\n                        key={objCardsList.id}>\r\n                            <img \r\n                                className={styles.cardList_container__photo}\r\n                                src={objCardsList.image} \r\n                                onClick={handeleClickModalOpen}\r\n                                alt={objCardsList.name}\r\n                                id={objCardsList.id}/>\r\n                            <span className={styles.cardList_container__name}>{objCardsList.name}</span>\r\n                            \r\n                        <Modal \r\n                            objCardsList={objCardsList} \r\n                            isOpen={isOpen}\r\n                            setIsOpen={setIsOpen} \r\n                            personFavorites={personFavorites}/>\r\n                    </li>\r\n                )}                                                \r\n            </ul>\r\n            {!isOpen && <UiLink/> }  \r\n        </div>\r\n    )\r\n}\r\n\r\nCardList.propTypes = {\r\n    cards:PropTypes.array\r\n};\r\n\r\n\r\nexport default CardList;"],"names":["LocationPage","React","EpisodesPage","_ref","objCardsList","isOpen","setIsOpen","personFavorites","_useState","useState","_useState2","_slicedToArray","listEpisodes","setListEpisodes","_useState3","_useState4","listLocation","setListLocation","episode","name","image","id","gender","location","species","status","useEffect","url","_jsxs","className","styles","children","_jsx","src","onClick","e","alt","Suspense","fallback","UiLoading","length","time","handleClickUp","window","pageYOffset","scrollBy","setTimeout","clearTimeout","cards","setPersonfavorites","handeleClickModalOpen","currentTarget","map","Modal","UiLink"],"sourceRoot":""}